// Code generated by hertz generator.

package tiktok

import (
	"context"
	"log"
	"net/http"

	"simple-tiktok/biz/dal/db"
	tiktok "simple-tiktok/biz/model/tiktok"
	"simple-tiktok/pkg/consts"
	"simple-tiktok/pkg/errno"

	"github.com/cloudwego/hertz/pkg/app"
)

// GetChat .
// @router /douyin/message/chat/ [GET]
func GetChat(ctx context.Context, c *app.RequestContext) {
	var err error
	var req tiktok.GetChatRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.JSON(http.StatusBadRequest, tiktok.GetChatResponse{
			StatusCode: errno.ParamErr.ErrCode,
			StatusMsg:  &errno.ParamErr.ErrMsg,
		})
		return
	}
	u1 := c.Value(consts.IdentityKeyID).(*tiktok.User).ID
	u2 := req.ToUserID
	result, err := db.GetMessages(ctx, uint(u1), uint(u2), req.PreMsgTime)
	if err != nil {
		log.Printf("查询用户: %v与用户: %v之间的消息失败: %v\n", u1, u2, err)
		c.JSON(http.StatusInternalServerError, tiktok.GetChatResponse{
			StatusCode: errno.ServiceErr.ErrCode,
			StatusMsg:  &errno.ServiceErr.ErrMsg,
		})
		return
	}

	messages := make([]*tiktok.Message, len(result))
	for i, res := range result {
		date := res.CreatedAt.Unix()
		messages[i] = &tiktok.Message{
			ID:         int64(res.ID),
			ToUserID:   int64(res.ReceiverID),
			FromUserID: int64(res.SenderID),
			Content:    res.Message,
			CreateTime: &date,
		}
	}

	c.JSON(http.StatusOK, tiktok.GetChatResponse{
		StatusCode:  errno.Success.ErrCode,
		StatusMsg:   &errno.Success.ErrMsg,
		MessageList: messages,
	})
}

// ChatMessageAction .
// @router /douyin/message/action/ [POST]
func ChatMessageAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req tiktok.ChatMessageActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.JSON(http.StatusBadRequest, tiktok.GetChatResponse{
			StatusCode: errno.ParamErr.ErrCode,
			StatusMsg:  &errno.ParamErr.ErrMsg,
		})
		return
	}

	// TODO: 发送消息敏感信息拦截过滤

	u1 := c.Value(consts.IdentityKeyID).(*tiktok.User).ID
	switch req.ActionType {
	case consts.SendMsg:
		_, err := db.CreateMessage(ctx, uint(u1), uint(req.ToUserID), req.Content)
		if err != nil {
			log.Printf("创建消息失败: %v\n", err)
			c.JSON(http.StatusOK, tiktok.ChatMessageActionResponse{
				StatusCode: errno.ServiceErr.ErrCode,
				StatusMsg:  &errno.ServiceErr.ErrMsg,
			})
			return
		}
	}

	c.JSON(http.StatusOK, tiktok.ChatMessageActionResponse{
		StatusCode: errno.Success.ErrCode,
		StatusMsg:  &errno.Success.ErrMsg,
	})
}
